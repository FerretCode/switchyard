name: Docker Build and Push on Push

on:
    push:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_NAME_BASE: ${{ github.repository }} # format: owner/repo
    SERVICES: configurator autoscale dashboard incident feature-flags scheduler

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v3

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push images
              run: |
                  for SERVICE in $SERVICES; do
                    echo "Processing $SERVICE..."

                    metadata=$(docker run --rm docker/metadata-action:latest \
                      --images $REGISTRY/${IMAGE_NAME_BASE}/$SERVICE \
                      --tags latest,${GITHUB_SHA::7} \
                      --labels "org.opencontainers.image.source=${{ github.repository }}" \
                      --output json)

                    tags=$(echo "$metadata" | jq -r '.[] | .tags | join(",")')
                    labels=$(echo "$metadata" | jq -r '.[] | .labels | to_entries | map("\(.key)=\(.value)") | join(",")')

                    echo "Tags: $tags"
                    echo "Labels: $labels"

                    docker buildx build \
                      --file ./$SERVICE/Dockerfile.dev \
                      --tag $REGISTRY/${IMAGE_NAME_BASE}/$SERVICE:$GITHUB_SHA \
                      --tag $REGISTRY/${IMAGE_NAME_BASE}/$SERVICE:latest \
                      --label "org.opencontainers.image.source=${{ github.repository }}" \
                      --push \
                      ./$SERVICE
                  done
